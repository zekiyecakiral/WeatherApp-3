{"ast":null,"code":"var _jsxFileName = \"/Users/HackYourFuture/Desktop/react/reactWeek3/homework/src/Weather.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nexport default function Weather() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [cities, setCities] = useState(\"\");\n  const API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\n  const getWeather = cityName => {\n    const END_POINT = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`;\n    fetch(END_POINT).then(res => res.json()).then(response => {\n      console.log(response);\n      const {\n        name,\n        sys: {\n          country\n        },\n        main: {\n          temp_max,\n          temp_min\n        },\n        weather: [{\n          main,\n          description\n        }],\n        coord: {\n          lat,\n          lon\n        }\n      } = response;\n      setData([...data, {\n        description: {\n          name,\n          country,\n          main,\n          description,\n          lat,\n          lon,\n          temp_max,\n          temp_min\n        },\n        id: Date.now()\n      }]);\n      setLoading(true);\n    }).catch(err => {\n      setHasError(true);\n    });\n  };\n\n  const addTodos = () => {\n    getWeather(city);\n    setCity(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"input\",\n    id: \"outlined-basic\",\n    label: \"City\",\n    variant: \"outlined\",\n    value: city,\n    onChange: event => {\n      setCity(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: addTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Search\")), data.map(todo => /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, todo.description.name, \", \", todo.description.country, \" \"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, todo.description.main), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, todo.description.description, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"min temp: \"), \" \", todo.description.temp_min, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"max temp: \"), \" \", todo.description.temp_max)), /*#__PURE__*/React.createElement(HighlightOffIcon, {\n    color: \"secondary\",\n    style: {\n      fontSize: 40\n    },\n    onClick: () => {\n      const selectedId = todo.id;\n      console.log(selectedId);\n      const remainingArray = data.filter(ori => ori.id != selectedId);\n      setData(remainingArray);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction CityWeather({\n  data\n}) {\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cityCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, data.name, \", \", data.country), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \" \", data.main), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, data.description)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"min temp : \", data.temp_min), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"max temp : \", data.temp_max), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"location : \", data.lat, \" \", data.lon)));\n}","map":{"version":3,"sources":["/Users/HackYourFuture/Desktop/react/reactWeek3/homework/src/Weather.js"],"names":["React","useState","Button","TextField","Card","CardContent","Typography","HighlightOffIcon","Weather","data","setData","loading","setLoading","hasError","setHasError","cities","setCities","API_KEY","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","getWeather","cityName","END_POINT","fetch","then","res","json","response","console","log","name","sys","country","main","temp_max","temp_min","weather","description","coord","lat","lon","id","Date","now","catch","err","addTodos","city","setCity","event","target","value","map","todo","fontSize","selectedId","remainingArray","filter","ori","CityWeather"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\n\nexport default function Weather() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [cities, setCities] = useState(\"\");\n\n  const API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n  const getWeather = (cityName) => {\n    const END_POINT = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`;\n    fetch(END_POINT)\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        const {\n          name,\n          sys: { country },\n          main: { temp_max, temp_min },\n          weather: [{ main, description }],\n          coord: { lat, lon },\n        } = response;\n        setData([\n          ...data,\n          {\n            description: {\n              name,\n              country,\n              main,\n              description,\n              lat,\n              lon,\n              temp_max,\n              temp_min,\n            },\n            id: Date.now(),\n          },\n        ]);\n        setLoading(true);\n      })\n      .catch((err) => {\n        setHasError(true);\n      });\n  };\n  const addTodos = () => {\n    getWeather(city);\n    setCity(\"\");\n  };\n  return (\n    <div>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          className=\"input\"\n          id=\"outlined-basic\"\n          label=\"City\"\n          variant=\"outlined\"\n          value={city}\n          onChange={(event) => {\n            setCity(event.target.value);\n          }}\n        />\n        <Button variant=\"contained\" color=\"secondary\" onClick={addTodos}>\n          Search\n        </Button>\n      </form>\n      {data.map((todo) => (\n        <Card className=\"container\" key={todo.id}>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {todo.description.name}, {todo.description.country}{\" \"}\n            </Typography>\n\n            <Typography color=\"textSecondary\">\n              {todo.description.main}\n            </Typography>\n\n            <Typography variant=\"body2\" component=\"p\">\n              {todo.description.description}\n              <br />\n              <br />\n              <span>min temp: </span> {todo.description.temp_min}\n              <br />\n              <span>max temp: </span> {todo.description.temp_max}\n            </Typography>\n          </CardContent>\n          <HighlightOffIcon\n            color=\"secondary\"\n            style={{ fontSize: 40 }}\n            onClick={() => {\n              const selectedId = todo.id;\n              console.log(selectedId);\n              const remainingArray = data.filter((ori) => ori.id != selectedId);\n              setData(remainingArray);\n            }}\n          />\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nfunction CityWeather({ data }) {\n  console.log(data);\n  return (\n    <div className=\"cityCard\">\n      <h2>\n        {data.name}, {data.country}\n      </h2>\n      <div>\n        <h3> {data.main}</h3>\n        <span>{data.description}</span>\n      </div>\n      <div>\n        <p>min temp : {data.temp_min}</p>\n        <p>max temp : {data.temp_max}</p>\n        <p>\n          location : {data.lat} {data.lon}\n        </p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}