{"ast":null,"code":"var _jsxFileName = \"/Users/HackYourFuture/Desktop/react/reactWeek3/homework/src/Weather.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nexport default function Weather() {\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const getWeather = cityName => {\n    console.log(cityName);\n    const API_KEY = \"2c15e16ab21e2ac37c7a627756f01940\";\n    const END_POINT = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`;\n    fetch(END_POINT).then(res => res.json()).then(data => {\n      console.log(data);\n      const {\n        name,\n        sys: {\n          country\n        },\n        main: {\n          temp_max,\n          temp_min\n        },\n        weather: [{\n          main,\n          description\n        }],\n        coord: {\n          lat,\n          lon\n        }\n      } = data;\n      setData({\n        name,\n        country,\n        main,\n        description,\n        lat,\n        lon,\n        temp_max,\n        temp_min\n      });\n      setLoading(true);\n    }).catch(err => {\n      setHasError(true);\n    });\n  }; // function handleChange(event) {\n  //   setCity({\n  //     ...city,\n  //     [event.target.name]: event.target.value,\n  //   });\n  // }\n  // function handleSubmit(event) {\n  //   event.preventDefault();\n  //   getWeather(city.name);\n  //   event.target.reset();\n  // }\n\n\n  const addTodos = () => {\n    console.log(\"aaaaa\");\n    console.log(...todos);\n    console.log(input);\n    setTodos([...todos, {\n      description: input,\n      id: 1\n    }]);\n    getWeather(input);\n    setInput(\"\");\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"container\">\n    //   <h1>Weather</h1>\n    //   <form onSubmit={handleSubmit}>\n    //     <label>\n    //       <input\n    //         type=\"text\"\n    //         name=\"name\"\n    //         onChange={handleChange}\n    //         placeholder=\"Search City\"\n    //       />\n    //     </label>\n    //     <input type=\"submit\" value=\"Submit\" />\n    //   </form>\n    //   {loading && !hasError && <CityWeather data={data} />}\n    //   <div style={{color: \"red\"}}>{hasError && <p>Something get wrong</p>}</div>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Outlined\",\n      variant: \"outlined\",\n      value: input,\n      onChange: event => {\n        setInput(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: addTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Secondary\")), data.map((todo, index) => /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, todo.name, \" add\"), /*#__PURE__*/React.createElement(Typography, {\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"adjective\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"well meaning and kindly.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }), '\"a benevolent smile\"')))))\n  );\n}\n\nfunction CityWeather({\n  data\n}) {\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cityCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, data.name, \", \", data.country), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \" \", data.main), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, data.description)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"min temp : \", data.temp_min), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"max temp : \", data.temp_max), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"location : \", data.lat, \" \", data.lon)));\n}","map":{"version":3,"sources":["/Users/HackYourFuture/Desktop/react/reactWeek3/homework/src/Weather.js"],"names":["React","useState","Button","TextField","Card","CardActions","CardContent","Typography","Weather","city","setCity","data","setData","loading","setLoading","hasError","setHasError","input","setInput","todos","setTodos","getWeather","cityName","console","log","API_KEY","END_POINT","fetch","then","res","json","name","sys","country","main","temp_max","temp_min","weather","description","coord","lat","lon","catch","err","addTodos","id","event","target","value","map","todo","index","CityWeather"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nexport default function Weather() {\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const getWeather = (cityName) => {\n    console.log(cityName);\n    const API_KEY = \"2c15e16ab21e2ac37c7a627756f01940\";\n    const END_POINT = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`;\n    fetch(END_POINT)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        const {\n          name,\n          sys: { country },\n          main: { temp_max, temp_min },\n          weather: [{ main, description }],\n          coord: { lat, lon },\n        } = data;\n        setData({\n          name,\n          country,\n          main,\n          description,\n          lat,\n          lon,\n          temp_max,\n          temp_min,\n        });\n        setLoading(true);\n      })\n      .catch((err) => {\n        setHasError(true);\n      });\n  };\n\n  // function handleChange(event) {\n  //   setCity({\n  //     ...city,\n  //     [event.target.name]: event.target.value,\n  //   });\n  // }\n\n  // function handleSubmit(event) {\n\n  //   event.preventDefault();\n  //   getWeather(city.name);\n  //   event.target.reset();\n  // }\n\n  const addTodos = () => {\n    console.log(\"aaaaa\");\n    console.log(...todos);\n    console.log(input);\n    setTodos([...todos, { description: input, id: 1 }]);\n    getWeather(input);\n    setInput(\"\");\n  };\n  return (\n    // <div className=\"container\">\n    //   <h1>Weather</h1>\n    //   <form onSubmit={handleSubmit}>\n    //     <label>\n    //       <input\n    //         type=\"text\"\n    //         name=\"name\"\n    //         onChange={handleChange}\n    //         placeholder=\"Search City\"\n    //       />\n    //     </label>\n    //     <input type=\"submit\" value=\"Submit\" />\n    //   </form>\n    //   {loading && !hasError && <CityWeather data={data} />}\n    //   <div style={{color: \"red\"}}>{hasError && <p>Something get wrong</p>}</div>\n    // </div>\n\n    <div>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Outlined\"\n          variant=\"outlined\"\n          value={input}\n          onChange={(event) => {\n            setInput(event.target.value);\n          }}\n        />\n        <Button variant=\"contained\" color=\"secondary\" onClick={addTodos}>\n          Secondary\n        </Button>\n      </form>\n\n      {data.map((todo,index) => (\n          <Card  key={index}>\n          <CardContent className=\"container\">\n      <Typography variant=\"h5\" component=\"h2\">{todo.name} add</Typography>\n            <Typography color=\"textSecondary\">adjective</Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              well meaning and kindly.\n              <br />\n              {'\"a benevolent smile\"'}\n            </Typography>\n          </CardContent>\n        </Card>)\n      )}\n    </div>\n  );\n}\n\nfunction CityWeather({ data }) {\n  console.log(data);\n  return (\n    <div className=\"cityCard\">\n      <h2>\n        {data.name}, {data.country}\n      </h2>\n      <div>\n        <h3> {data.main}</h3>\n        <span>{data.description}</span>\n      </div>\n      <div>\n        <p>min temp : {data.temp_min}</p>\n        <p>max temp : {data.temp_max}</p>\n        <p>\n          location : {data.lat} {data.lon}\n        </p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}